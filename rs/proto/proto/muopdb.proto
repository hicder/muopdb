syntax = "proto3";
package muopdb;

service Aggregator {
  rpc Get(GetRequest) returns (GetResponse) {}
}

message GetRequest {
  string index = 1;
  repeated float vector = 2;
  uint32 top_k = 3;
  uint32 ef_construction = 5;

  // For metrics, don't set by default
  bool record_metrics = 4;
  repeated uint64 user_ids = 6;
}

message GetResponse {
  repeated uint64 ids = 1;

  // For metrics, not enabled by default
  uint64 num_pages_accessed = 2;
}

service IndexServer {
  rpc Search(SearchRequest) returns (SearchResponse) {}

  rpc Insert(InsertRequest) returns (InsertResponse) {}

  rpc InsertPacked(InsertPackedRequest) returns (InsertPackedResponse) {}

  rpc Flush(FlushRequest) returns (FlushResponse) {}
}

message SearchRequest {
  string index_name = 1;
  repeated float vector = 2;
  uint32 top_k = 3;
  uint32 ef_construction = 5;

  // For metrics, don't set by default
  bool record_metrics = 4;
  repeated uint64 user_ids = 6;
}

message SearchResponse {
  repeated uint64 ids = 1;
  repeated float scores = 2;

  // For metrics, not enabled by default
  uint64 num_pages_accessed = 3;
}

message InsertRequest {
  string collection_name = 1;

  repeated uint64 ids = 2;

  // flattened vector
  repeated float vectors = 3;

  repeated uint64 user_ids = 4;
}

message InsertResponse {
  repeated uint64 inserted_ids = 1;
}

message FlushRequest {
  string collection_name = 1;
}

message FlushResponse {
  repeated string flushed_segments = 1;
}

message InsertPackedRequest {
  string collection_name = 1;
  bytes ids = 2;
  bytes vectors = 3;
  repeated uint64 user_ids = 4;
}

message InsertPackedResponse {
}